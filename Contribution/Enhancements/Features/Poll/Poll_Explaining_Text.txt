Explaining Poll.html (Reveal.js Poll) to Lecturer
=================================================

Purpose
-------
Poll.html demonstrates how to integrate interactivity into a Reveal.js presentation using web technologies (HTML, CSS, and JavaScript).

How it Works
------------
- Four voting buttons (A, B, C, D) are displayed on a slide.
- Each click increments a counter in memory.
- A bar chart is drawn on an HTML5 canvas to visualize the votes.
- A Reset button clears all counts back to zero.

Why This is Useful
------------------
- Engages the audience with live interaction.
- Demonstrates combining slides with custom code inside Reveal.js.
- Serves as an example of integrating JavaScript event handling and Canvas drawing.

Limitation (Multi-Device Voting)
--------------------------------
Votes are stored only in the local browser session. That means each browser/device is independent. 
- A student on a laptop can vote once.
- The same student can open their phone and vote again, because the browser has no knowledge of other devices.
This limitation exists because there is **no server or shared database** in this setup. 
To truly prevent multi-voting across devices, you would need a backend system that tracks users or devices globally.

Talking Points for Lecturer
---------------------------
1. Emphasize how Reveal.js presentations can embed real-time interactive components.
2. Highlight that this poll is fully client-side, lightweight, and works without extra libraries.
3. Acknowledge the limitation and explain how server-side solutions (Firebase, Supabase, WebSockets) could extend it into a true multi-user poll system.
